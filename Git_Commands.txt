Setup and Configuration
-----------------------
| Command                                            | Description                     |
| -------------------------------------------------- | ------------------------------- |
| `git config --global user.name "Your Name"`        | Set your name globally          |
| `git config --global user.email "you@example.com"` | Set your email globally         |
| `git config --global core.editor nano`             | Set default editor              |
| `git config --list`                                | Show current configuration      |
| `git init`                                         | Initialize a new Git repository |


Repository Operations
---------------------
| Command                    | Description                                     |
| -------------------------- | ----------------------------------------------- |
| `git clone <repo-url>`     | Clone a repository                              |
| `git status`               | Check the status of your working directory      |
| `git add <file>`           | Add a file to staging                           |
| `git add .`                | Add all changes to staging                      |
| `git commit -m "message"`  | Commit staged changes                           |
| `git commit -am "message"` | Add and commit in one step (tracked files only) |
| `git rm <file>`            | Remove a file and stage the deletion            |
| `git mv <old> <new>`       | Rename or move a file                           |


Branching and Merging
---------------------
| Command                  | Description                                |
| ------------------------ | ------------------------------------------ |
| `git branch`             | List all local branches                    |
| `git branch <name>`      | Create a new branch                        |
| `git checkout <branch>`  | Switch to a branch                         |
| `git checkout -b <name>` | Create and switch to a new branch          |
| `git merge <branch>`     | Merge specified branch into current        |
| `git rebase <branch>`    | Reapply commits on top of another base tip |
| `git branch -d <name>`   | Delete a branch                            |


Remote Repositories
-------------------
| Command                         | Description                          |
| ------------------------------- | ------------------------------------ |
| `git remote -v`                 | View remote URLs                     |
| `git remote add origin <url>`   | Add a new remote                     |
| `git push origin <branch>`      | Push branch to remote                |
| `git push -u origin <branch>`   | Push and set upstream tracking       |
| `git pull`                      | Fetch and merge from remote          |
| `git fetch`                     | Fetch changes from remote (no merge) |
| `git remote rename <old> <new>` | Rename a remote                      |


Viewing History
---------------
| Command             | Description                       |
| ------------------- | --------------------------------- |
| `git log`           | Show commit history               |
| `git log --oneline` | Compact log format                |
| `git diff`          | Show unstaged changes             |
| `git diff --staged` | Show staged changes               |
| `git show <commit>` | Show details of a specific commit |


Undo and Reset
--------------
| Command                    | Description                                       |
| -------------------------- | ------------------------------------------------- |
| `git reset <file>`         | Unstage a file                                    |
| `git reset --hard`         | Discard all local changes                         |
| `git checkout -- <file>`   | Discard changes in a file                         |
| `git revert <commit>`      | Create a new commit that undoes a previous commit |
| `git reset --soft HEAD~1`  | Undo last commit but keep changes staged          |
| `git reset --mixed HEAD~1` | Undo last commit and unstage changes              |


Stashing and Cleaning
---------------------
| Command           | Description                            |
| ----------------- | -------------------------------------- |
| `git stash`       | Stash changes for later                |
| `git stash apply` | Reapply stashed changes                |
| `git stash list`  | List stashed changes                   |
| `git stash drop`  | Drop a stash                           |
| `git clean -f`    | Remove untracked files                 |
| `git clean -fd`   | Remove untracked files and directories |

Tagging
-------
| Command                          | Description          |
| -------------------------------- | -------------------- |
| `git tag`                        | List all tags        |
| `git tag <name>`                 | Create a tag         |
| `git tag -a <name> -m "message"` | Create annotated tag |
| `git push origin <tag>`          | Push a tag to remote |
| `git push origin --tags`         | Push all tags        |


Advanced
--------
| Command                    | Description                                 |
| -------------------------- | ------------------------------------------- |
| `git cherry-pick <commit>` | Apply a specific commit from another branch |
| `git reflog`               | Show history of HEAD                        |
| `git bisect`               | Binary search to find faulty commit         |
| `git blame <file>`         | Show who made each line change              |
